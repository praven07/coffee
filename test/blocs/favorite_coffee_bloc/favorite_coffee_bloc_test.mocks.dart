// Mocks generated by Mockito 5.4.4 from annotations
// in coffee/test/blocs/favorite_coffee_bloc/favorite_coffee_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:typed_data' as _i4;

import 'package:coffee/models/coffee.dart' as _i5;
import 'package:coffee/services/favorite_coffee_service.dart' as _i3;
import 'package:hive/hive.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FavoriteCoffeeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteCoffeeService extends _i1.Mock
    implements _i3.FavoriteCoffeeService {
  MockFavoriteCoffeeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<_i4.Uint8List> get box => (super.noSuchMethod(
        Invocation.getter(#box),
        returnValue: _FakeBox_0<_i4.Uint8List>(
          this,
          Invocation.getter(#box),
        ),
      ) as _i2.Box<_i4.Uint8List>);

  @override
  set box(_i2.Box<_i4.Uint8List>? _box) => super.noSuchMethod(
        Invocation.setter(
          #box,
          _box,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i5.Coffee? coffee) => super.noSuchMethod(
        Invocation.method(
          #add,
          [coffee],
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i5.Coffee> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <_i5.Coffee>[],
      ) as List<_i5.Coffee>);

  @override
  int length() => (super.noSuchMethod(
        Invocation.method(
          #length,
          [],
        ),
        returnValue: 0,
      ) as int);
}
